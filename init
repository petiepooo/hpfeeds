#!/bin/bash

if [ "$1" == "broker" ]; then
  sed -i -e 's/127.0.0.1/mongodb/' /hpfeeds/feedbroker.py
  sed -i -e 's/hp2/ULX_hpfeedbroker/' /hpfeeds/feedbroker.py
  shift
  exec python /hpfeeds/feedbroker.py

elif [ "$1" == "dump_users" ]; then
  sed -i -e 's/MongoClient..$/MongoClient("mongodb")/' /hpfeeds/dump_users.py
  shift
  exec python /hpfeeds/dump_users.py

elif [ "$1" == "add_user" ]; then
  sed -i -e 's/MongoClient..$/MongoClient("mongodb")/' /hpfeeds/add_user.py
  shift
  exec python /hpfeeds/add_user.py $@

elif [ "$1" == "geoloc" ]; then
  shift
  exec python /hpfeeds/geoloc.py /opt/geoloc.conf

else # help and all unrecognized commands
  cat <<EOF
This is a dockerized version of the rep/hpfeeds github repository.

There are several utilities ready to run with this docker image.

To run a feedbroker, stand up a mongo container, eg:
  docker run -d --name mongo -v /opt/mongo/data/db:/data/db mongo:2.6.5
Then run this container, linking the database as mongodb, eg:
  docker run -d --name broker --link mongo:mongodb -p 10000:10000 pnelson/hpfeeds broker

To add broker users, use this format for the run parameters:
                  "add_user <user> <secret> <publishes> <subscribes>"
  docker run --rm -ti --link mongo:mongodb pnelson/hpfeeds add_user MyUser MySecret "geoloc.events" "dionaea.capture,snort.alerts"

To review broker users, use this format:
  docker run --rm -ti --link mongo:mongodb pnelson/hpfeeds dump_users

To run the geoloc agent (converts several alert and event feeds to a
geoloc.events feed such as what honeymap expects), you will need to
download the Maxmind IP and IPv6 (lite) databases and create a JSON
config file similar to the one below, and save them all to a directory
to be mounted as a volume, eg. /srv/geo.
{
  "HOST": "broker",
  "PORT": 10000,
  "IDENT": "MyUser",
  "SECRET": "MySecret",
  "CHANNELS": [ "amun.events", "dionaea.connections", "dionaea.capture", "glastopf.events", "beeswarm.hive", "kippo.sessions", "conpot.events", "snort.alerts", "wordpot.events", "shockpot.events", "p0f.events"],
  "GEOLOC_CHAN": "geoloc.events"
}

Then start with the broker container linked, and the directory with
config and geoip files mounted read-only at /opt, eg:
  docker run -d --name geoloc --link broker:broker -v /srv/geo:/opt:ro pnelson/hpfeeds geoloc

Planned features include a proxy that connects to multiple brokers and
concatenates or distributes feeds among them.
EOF

fi
